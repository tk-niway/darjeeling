# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  signin: User!
  signup: User!
  user(where: UserWhereUniqueInput!): User!
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type User {
  auth0Id: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  isActive: Boolean!
  name: String!
  updatedAt: DateTime!
}

input UserCreateInput {
  auth0Id: String!
  createdAt: DateTime
  email: String!
  id: String
  isActive: Boolean
  name: String!
  updatedAt: DateTime
}

input UserOrderByWithRelationInput {
  auth0Id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

enum UserScalarFieldEnum {
  auth0Id
  createdAt
  email
  id
  isActive
  name
  updatedAt
}

input UserUpdateInput {
  auth0Id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  auth0Id: StringFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  isActive: BoolFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  auth0Id: String
  createdAt: DateTimeFilter
  email: String
  id: String
  isActive: BoolFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}